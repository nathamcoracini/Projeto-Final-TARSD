---
- hosts: all
  become: true
  tasks:

  - name: Update apt-get repo and cache
    apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

  # - name: Upgrade all apt packages
  #   apt: upgrade=dist force_apt_get=yes

  # - name: Install required system packages
  #   apt: name={{ item }} state=latest update_cache=yes
  #   loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'python3-setuptools']

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io

  - name: Reinicia ssh para funcionamento do docker
    service:
      name: ssh
      state: restarted

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none
    become: yes

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0
    become: yes

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
    become: yes

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list
    become: yes

  - name: Atualiza a lista de repositorios e instala os pacotes do K8s
    apt: name={{ item }} update_cache=yes
    loop: ['kubelet', 'kubeadm', 'kubectl']
    become: yes

  - name: Inicia o cluster Kubernetes
    command: kubeadm init --apiserver-advertise-address 192.168.50.10
    become: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Cria a estrutura de diret´orios para o funcionamento do Kubernetes
    file:
      path: /home/vagrant/.kube
      state: directory

  - name: Copia as configura¸c~oes do kubernetes para o diret´orio do usu´ario vagrant
    command: cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
    become: yes

  - name: Ajusta as permissoes no arquivo de configuracao do Kubernetes
    file:
      path: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant
      state: file
    become: yes

  - name: Acertar local da configuracao
    shell: export KUBECONFIG=$HOME/.kube/conf

  - name: Stop and Start ssh
    service:
      name: ssh
      state: restarted

  - name: Instala o plugin Weave para gerenciar a rede de overlay no Kubernetes
    become: false
    command: kubectl apply -f /vagrant/net.yaml

  - name: Salva o token para entrada de novos nos no cluster
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copia o token para entrada de novos nos no cluster em um arquivo
    become: false
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command.sh"
